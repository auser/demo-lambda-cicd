"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = __importDefault(require("axios"));
// src/index.ts
exports.handler = async (event) => {
    try {
        return await handle(event);
    }
    catch (e) {
        console.error(e);
        const errMsg = typeof e.message === "string" && e.message.startsWith("ClientError:")
            ? e.message
            : "InternalServerError";
        return {
            statusCode: errMsg === "InternalServerError" ? 500 : 400,
            body: errMsg,
        };
    }
};
exports.default = exports.handler;
const handle = async (event) => {
    const params = event.queryStringParameters;
    if (!params) {
        throw new Error(`ClientError: parameters cannot be empty`);
    }
    const type = params.type || "states";
    const url = `https://corona.lmao.ninja/v2/${type}`;
    try {
        const resp = await axios_1.default.get(url);
        const data = resp.data;
        return {
            statusCode: 200,
            body: JSON.stringify(data),
        };
    }
    catch (e) {
        throw new Error(e);
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFLQSxrREFBMEI7QUFpQjFCLGVBQWU7QUFDRixRQUFBLE9BQU8sR0FBRyxLQUFLLEVBQzFCLEtBQXNCLEVBQ1UsRUFBRTtJQUNsQyxJQUFJO1FBQ0YsT0FBTyxNQUFNLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUM1QjtJQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ1YsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqQixNQUFNLE1BQU0sR0FDVixPQUFPLENBQUMsQ0FBQyxPQUFPLEtBQUssUUFBUSxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLGNBQWMsQ0FBQztZQUNuRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU87WUFDWCxDQUFDLENBQUMscUJBQXFCLENBQUM7UUFDNUIsT0FBTztZQUNMLFVBQVUsRUFBRSxNQUFNLEtBQUsscUJBQXFCLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRztZQUN4RCxJQUFJLEVBQUUsTUFBTTtTQUNiLENBQUM7S0FDSDtBQUNILENBQUMsQ0FBQztBQUVGLGtCQUFlLGVBQU8sQ0FBQztBQUV2QixNQUFNLE1BQU0sR0FBRyxLQUFLLEVBQ2xCLEtBQTJCLEVBQ0ssRUFBRTtJQUNsQyxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMscUJBQXFCLENBQUM7SUFFM0MsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNYLE1BQU0sSUFBSSxLQUFLLENBQUMseUNBQXlDLENBQUMsQ0FBQztLQUM1RDtJQUNELE1BQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLElBQUksUUFBUSxDQUFDO0lBQ3JDLE1BQU0sR0FBRyxHQUFHLGdDQUFnQyxJQUFJLEVBQUUsQ0FBQztJQUNuRCxJQUFJO1FBQ0YsTUFBTSxJQUFJLEdBQUcsTUFBTSxlQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2xDLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFFdkIsT0FBTztZQUNMLFVBQVUsRUFBRSxHQUFHO1lBQ2YsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO1NBQzNCLENBQUM7S0FDSDtJQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ1YsTUFBTSxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNwQjtBQUNILENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFQSUdhdGV3YXlFdmVudCxcbiAgQVBJR2F0ZXdheVByb3h5UmVzdWx0LFxuICBBUElHYXRld2F5UHJveHlFdmVudCxcbn0gZnJvbSBcImF3cy1sYW1iZGFcIjtcbmltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcblxuaW50ZXJmYWNlIFN0YXRlRGF0YSB7XG4gIHN0YXRlOiBzdHJpbmc7XG4gIGNhc2VzOiBOdW1iZXI7XG4gIHRvZGF5Q2FzZXM6IE51bWJlcjtcbiAgZGVhdGhzOiBOdW1iZXI7XG4gIHRvZGF5RGVhdGhzOiBOdW1iZXI7XG4gIGFjdGl2ZTogTnVtYmVyO1xuICB0ZXN0czogTnVtYmVyO1xuICB0ZXN0c1Blck9uZU1pbGxpb246IE51bWJlcjtcbn1cbnR5cGUgU2VydmVyRGF0YSA9IFN0YXRlRGF0YTtcbmludGVyZmFjZSBTZXJ2ZXJSZXNwb25zZSB7XG4gIGRhdGE6IFNlcnZlckRhdGE7XG59XG5cbi8vIHNyYy9pbmRleC50c1xuZXhwb3J0IGNvbnN0IGhhbmRsZXIgPSBhc3luYyAoXG4gIGV2ZW50OiBBUElHYXRld2F5RXZlbnRcbik6IFByb21pc2U8QVBJR2F0ZXdheVByb3h5UmVzdWx0PiA9PiB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGF3YWl0IGhhbmRsZShldmVudCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBjb25zb2xlLmVycm9yKGUpO1xuICAgIGNvbnN0IGVyck1zZyA9XG4gICAgICB0eXBlb2YgZS5tZXNzYWdlID09PSBcInN0cmluZ1wiICYmIGUubWVzc2FnZS5zdGFydHNXaXRoKFwiQ2xpZW50RXJyb3I6XCIpXG4gICAgICAgID8gZS5tZXNzYWdlXG4gICAgICAgIDogXCJJbnRlcm5hbFNlcnZlckVycm9yXCI7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXR1c0NvZGU6IGVyck1zZyA9PT0gXCJJbnRlcm5hbFNlcnZlckVycm9yXCIgPyA1MDAgOiA0MDAsXG4gICAgICBib2R5OiBlcnJNc2csXG4gICAgfTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgaGFuZGxlcjtcblxuY29uc3QgaGFuZGxlID0gYXN5bmMgKFxuICBldmVudDogQVBJR2F0ZXdheVByb3h5RXZlbnRcbik6IFByb21pc2U8QVBJR2F0ZXdheVByb3h5UmVzdWx0PiA9PiB7XG4gIGNvbnN0IHBhcmFtcyA9IGV2ZW50LnF1ZXJ5U3RyaW5nUGFyYW1ldGVycztcblxuICBpZiAoIXBhcmFtcykge1xuICAgIHRocm93IG5ldyBFcnJvcihgQ2xpZW50RXJyb3I6IHBhcmFtZXRlcnMgY2Fubm90IGJlIGVtcHR5YCk7XG4gIH1cbiAgY29uc3QgdHlwZSA9IHBhcmFtcy50eXBlIHx8IFwic3RhdGVzXCI7XG4gIGNvbnN0IHVybCA9IGBodHRwczovL2Nvcm9uYS5sbWFvLm5pbmphL3YyLyR7dHlwZX1gO1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3AgPSBhd2FpdCBheGlvcy5nZXQodXJsKTtcbiAgICBjb25zdCBkYXRhID0gcmVzcC5kYXRhO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXR1c0NvZGU6IDIwMCxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpLFxuICAgIH07XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoZSk7XG4gIH1cbn07XG4iXX0=